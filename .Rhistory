library(e1071)
setwd("E:/WorkSpace/GitHub/COMP90051")
model <- naiveBayes(exist ~ fromout + fromin + toout + toin + width, data = trainset)
load("E:/WorkSpace/GitHub/COMP90051/.RData")
model <- naiveBayes(exist ~ fromout + fromin + toout + toin + width, data = trainset)
View(testset)
pred <- predict(model, testset[4,8])
pred
testset
testset[4,8]
testset[,4:8]
pred <- predict(model, testset[,4:8])
pref
pred
pred
test_attr = testset(,4:8)
test_attr = testset[,4:8]
test_attr
pred <- predict(model, test_attr)
pred
train_attr <- trainset[,4:9]
model <- naiveBayes(as.factor(train_attr[,9])~.m data = train_attr)
model <- naiveBayes(as.factor(train_attr[,9])~., data = train_attr)
model <- naiveBayes(as.factor(exist)~., data = train_attr)
pred <- predict(model, test_attr)
pred
model$apriori / sum(model$apriori)
table(c(1:2000),pred)
pred
test1 <- table(c(1:2000),pred)
write.csv(test1, file = "test1", row.name = TRUE)
library(party)
install.packages("party")
str(train_attr)
library(party)
sn_ctree <- ctree(exist ~ fromout + fromin + toout + toin + width, data = train_attr)
print(sn_ctree)
plot(sn_ctree)
plot(sn_ctree, type = "simple")
table(predict(sn_ctree), test_attr)
install.packages(ISLR)
install.packages("ISLR")
library(ISLR)
install.packages("tree")
View(test_attr)
View(test_attr)
View(train_attr)
text(tree_model, pretty = 0)
# fit the tree model using training data
library(tree)
library(ISLR)
library(tree)
attach(test_attr)
train_attr = trainset[,4:8]
link_label = as.factor(trainset$exist)
train_attr = data.frame(train_attr,link_label)
# fit the tree model using training data
tree_model = tree(exist~. , data = train_attr)
plot(tree_model)
source('~/.active-rstudio-document')
source('E:/WorkSpace/GitHub/COMP90051/decision_tree.R', echo=TRUE)
source('E:/WorkSpace/GitHub/COMP90051/decision_tree.R', echo=TRUE)
source('E:/WorkSpace/GitHub/COMP90051/decision_tree.R', echo=TRUE)
[]
trainset = read.csv("result.csv", header = TRUE, sep = ",")
source('~/.active-rstudio-document', echo=TRUE)
View(trainset)
source('E:/WorkSpace/GitHub/COMP90051/naiveBayes.R', echo=TRUE)
NB_pred
source('E:/WorkSpace/GitHub/COMP90051/naiveBayes.R', echo=TRUE)
source('E:/WorkSpace/GitHub/COMP90051/naiveBayes.R', echo=TRUE)
?write.csv
source('E:/WorkSpace/GitHub/COMP90051/naiveBayes.R', echo=TRUE)
source('E:/WorkSpace/GitHub/COMP90051/naiveBayes.R', echo=TRUE)
write.arff(trainset, "train.arff", eol = "\n", relation = deparse(substitute(trainset)))
install.packages("foreign")
write.arff(trainset, "train.arff", eol = "\n", relation = deparse(substitute(trainset)))
library(foreign)
write.arff(trainset, "train.arff", eol = "\n", relation = deparse(substitute(trainset)))
write.arff(testset, "test.arff", eol = "\n", relation = deparse(substitute(testset)))
